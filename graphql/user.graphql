extend type Query {
    users: [User!]! @paginate
    user(id: ID @eq): User @find
    users(name: String @where(operator: "like")): [User!]! @paginate
    userNameID(id: ID @eq, name: String @eq): User @find
    userState(id: ID!): String @field(resolver: "UserStatus@resolve")
}

type Mutation {
    createUser(
        name: String!
        email: String! @rules(apply: ["email", "unique:users"])
        password: String! @rules(apply: ["min:8"])
    ): User! @create

    updateUser(id: ID!, name: String, email: String): User! @update
    deleteUser(id: ID! @whereKey): User @forceDelete
    upsertUser(
        id: ID!
        name: String!
        email: String!
        password: String!
    ): User! @upsert
}


type User {
    id: ID
    name: String
    email: String
    email_verified_at: String
    avatar: String,
    notes: [Note]! @hasMany
}
